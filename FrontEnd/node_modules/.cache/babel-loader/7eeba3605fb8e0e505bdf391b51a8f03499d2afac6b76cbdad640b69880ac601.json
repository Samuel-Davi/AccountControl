{"ast":null,"code":"var _jsxFileName = \"/home/samlima/Desktop/SamArchives/Programa\\xE7\\xE3o/Controle da Conta/FrontEnd/src/paginas/login/index.js\",\n  _s = $RefreshSig$();\nimport './style.css';\nimport { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport api from '../../services/api';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const [nome, setNome] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const welcome = nome => {\n    toast.success(\"Bem-vindo \" + nome);\n    setTimeout(() => {\n      navigate('home', {\n        state: {\n          nome: nome\n        }\n      });\n    }, 2000);\n  };\n  const campoVazio = () => {\n    toast.warn(\"Preencha os campos\");\n  };\n  const notExist = () => {\n    toast.error(\"Usuário não existe\");\n  };\n  const wrong = () => {\n    toast.error(\"Usuário ou Senha incorretos\");\n  };\n  const verificarLogin = async () => {\n    if (nome === \"\" || password === \"\") {\n      campoVazio();\n      setNome(\"\");\n      setPassword(\"\");\n    } else {\n      setNome(\"\");\n      setPassword(\"\");\n      var count = 0;\n      await api.get('/users').then(res => {\n        for (let i = 0; i < res.data.length; i++) {\n          const user = res.data[i];\n          console;\n          if (user.username === nome) {\n            count++;\n            if (user.password === password) {\n              welcome(nome);\n              break;\n            } else {\n              wrong();\n              break;\n            }\n          } else {}\n        }\n        if (count === 0) {\n          notExist();\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AllPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"BlockLogin\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divTextLogin\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divEditTexts\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"editText\",\n          placeholder: \"Username\",\n          value: nome,\n          onChange: e => {\n            setNome(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"editText\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divButton\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"buttonEntrar\",\n          onClick: () => {\n            verificarLogin();\n          },\n          value: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\",\n      autoClose: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"HAa5DrSAqhK3ExElkrb+fz4hJQE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","api","ToastContainer","toast","jsxDEV","_jsxDEV","Login","_s","nome","setNome","password","setPassword","navigate","welcome","success","setTimeout","state","campoVazio","warn","notExist","error","wrong","verificarLogin","count","get","then","res","i","data","length","user","console","username","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","position","autoClose","_c","$RefreshReg$"],"sources":["/home/samlima/Desktop/SamArchives/Programação/Controle da Conta/FrontEnd/src/paginas/login/index.js"],"sourcesContent":["import './style.css'\r\nimport { useState } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from '../../services/api'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nexport const Login = () =>{\r\n\r\n  const [nome, setNome] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const welcome = (nome) => {toast.success(\"Bem-vindo \"+ nome); setTimeout(() => {\r\n    navigate('home', {state:{\r\n      nome: nome,\r\n    }})\r\n  }, 2000);}\r\n  const campoVazio = () => {toast.warn(\"Preencha os campos\")}\r\n  const notExist = () => {toast.error(\"Usuário não existe\")}\r\n  const wrong = () => {toast.error(\"Usuário ou Senha incorretos\")}\r\n  \r\n\r\n  const verificarLogin =  async () =>{\r\n    if(nome === \"\" || password === \"\"){\r\n      campoVazio()\r\n      setNome(\"\")\r\n      setPassword(\"\")\r\n    }else{\r\n      setNome(\"\")\r\n      setPassword(\"\")\r\n      var count = 0;\r\n      await api.get('/users')\r\n      .then((res) =>{\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          const user = res.data[i];\r\n          console\r\n          if(user.username === nome){\r\n            count++\r\n            if(user.password === password){\r\n              welcome(nome)\r\n              break;\r\n            }else{\r\n              wrong()\r\n              break;\r\n            }\r\n          }else{\r\n          }\r\n        }\r\n        if(count === 0){\r\n          notExist()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className='AllPage'>\r\n      <form className='BlockLogin'>\r\n        <div className='divTextLogin'>\r\n          <h1>Login</h1>\r\n        </div>\r\n        <div className='divEditTexts'>\r\n            <input type='text' className=\"editText\" placeholder=\"Username\" value={nome} onChange={(e) => {setNome(e.target.value)}}/>\r\n            <input type='password' className=\"editText\" placeholder=\"Password\" value={password} onChange={(e) => {setPassword(e.target.value)}}/>\r\n        </div>\r\n        <div className='divButton'>\r\n          <input type=\"button\" className='buttonEntrar' onClick={() =>{verificarLogin()}} value=\"Entrar\"/>\r\n        </div>\r\n      </form>\r\n      <ToastContainer position=\"top-center\" autoClose={1000}/>\r\n    </div>\r\n  )\r\n}"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAO,uCAAuC;AAC9C,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,OAAO,GAAIL,IAAI,IAAK;IAACL,KAAK,CAACW,OAAO,CAAC,YAAY,GAAEN,IAAI,CAAC;IAAEO,UAAU,CAAC,MAAM;MAC7EH,QAAQ,CAAC,MAAM,EAAE;QAACI,KAAK,EAAC;UACtBR,IAAI,EAAEA;QACR;MAAC,CAAC,CAAC;IACL,CAAC,EAAE,IAAI,CAAC;EAAC,CAAC;EACV,MAAMS,UAAU,GAAGA,CAAA,KAAM;IAACd,KAAK,CAACe,IAAI,CAAC,oBAAoB,CAAC;EAAA,CAAC;EAC3D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IAAChB,KAAK,CAACiB,KAAK,CAAC,oBAAoB,CAAC;EAAA,CAAC;EAC1D,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAAClB,KAAK,CAACiB,KAAK,CAAC,6BAA6B,CAAC;EAAA,CAAC;EAGhE,MAAME,cAAc,GAAI,MAAAA,CAAA,KAAW;IACjC,IAAGd,IAAI,KAAK,EAAE,IAAIE,QAAQ,KAAK,EAAE,EAAC;MAChCO,UAAU,CAAC,CAAC;MACZR,OAAO,CAAC,EAAE,CAAC;MACXE,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,MAAI;MACHF,OAAO,CAAC,EAAE,CAAC;MACXE,WAAW,CAAC,EAAE,CAAC;MACf,IAAIY,KAAK,GAAG,CAAC;MACb,MAAMtB,GAAG,CAACuB,GAAG,CAAC,QAAQ,CAAC,CACtBC,IAAI,CAAEC,GAAG,IAAI;QACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,CAACE,IAAI,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;UACxC,MAAMG,IAAI,GAAGJ,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;UACxBI,OAAO;UACP,IAAGD,IAAI,CAACE,QAAQ,KAAKxB,IAAI,EAAC;YACxBe,KAAK,EAAE;YACP,IAAGO,IAAI,CAACpB,QAAQ,KAAKA,QAAQ,EAAC;cAC5BG,OAAO,CAACL,IAAI,CAAC;cACb;YACF,CAAC,MAAI;cACHa,KAAK,CAAC,CAAC;cACP;YACF;UACF,CAAC,MAAI,CACL;QACF;QACA,IAAGE,KAAK,KAAK,CAAC,EAAC;UACbJ,QAAQ,CAAC,CAAC;QACZ;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEd,OAAA;IAAK4B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtB7B,OAAA;MAAM4B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC1B7B,OAAA;QAAK4B,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3B7B,OAAA;UAAA6B,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACNjC,OAAA;QAAK4B,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzB7B,OAAA;UAAOkC,IAAI,EAAC,MAAM;UAACN,SAAS,EAAC,UAAU;UAACO,WAAW,EAAC,UAAU;UAACC,KAAK,EAAEjC,IAAK;UAACkC,QAAQ,EAAGC,CAAC,IAAK;YAAClC,OAAO,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAAA;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACzHjC,OAAA;UAAOkC,IAAI,EAAC,UAAU;UAACN,SAAS,EAAC,UAAU;UAACO,WAAW,EAAC,UAAU;UAACC,KAAK,EAAE/B,QAAS;UAACgC,QAAQ,EAAGC,CAAC,IAAK;YAAChC,WAAW,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAAA;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpI,CAAC,eACNjC,OAAA;QAAK4B,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxB7B,OAAA;UAAOkC,IAAI,EAAC,QAAQ;UAACN,SAAS,EAAC,cAAc;UAACY,OAAO,EAAEA,CAAA,KAAK;YAACvB,cAAc,CAAC,CAAC;UAAA,CAAE;UAACmB,KAAK,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACPjC,OAAA,CAACH,cAAc;MAAC4C,QAAQ,EAAC,YAAY;MAACC,SAAS,EAAE;IAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAAA/B,EAAA,CAnEYD,KAAK;EAAA,QAKCN,WAAW;AAAA;AAAAgD,EAAA,GALjB1C,KAAK;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}